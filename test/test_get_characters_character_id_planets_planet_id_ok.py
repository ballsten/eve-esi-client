# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online

    The version of the OpenAPI document: 1.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from esi_client.models.get_characters_character_id_planets_planet_id_ok import GetCharactersCharacterIdPlanetsPlanetIdOk

class TestGetCharactersCharacterIdPlanetsPlanetIdOk(unittest.TestCase):
    """GetCharactersCharacterIdPlanetsPlanetIdOk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCharactersCharacterIdPlanetsPlanetIdOk:
        """Test GetCharactersCharacterIdPlanetsPlanetIdOk
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCharactersCharacterIdPlanetsPlanetIdOk`
        """
        model = GetCharactersCharacterIdPlanetsPlanetIdOk()
        if include_optional:
            return GetCharactersCharacterIdPlanetsPlanetIdOk(
                links = [
                    esi_client.models.get_characters_character_id_planets_planet_id_link.get_characters_character_id_planets_planet_id_link(
                        destination_pin_id = 56, 
                        link_level = 0, 
                        source_pin_id = 56, )
                    ],
                pins = [
                    esi_client.models.get_characters_character_id_planets_planet_id_pin.get_characters_character_id_planets_planet_id_pin(
                        contents = [
                            esi_client.models.get_characters_character_id_planets_planet_id_content.get_characters_character_id_planets_planet_id_content(
                                amount = 56, 
                                type_id = 56, )
                            ], 
                        expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extractor_details = esi_client.models.get_characters_character_id_planets_planet_id_extractor_details.get_characters_character_id_planets_planet_id_extractor_details(
                            cycle_time = 56, 
                            head_radius = 1.337, 
                            heads = [
                                esi_client.models.get_characters_character_id_planets_planet_id_head.get_characters_character_id_planets_planet_id_head(
                                    head_id = 0, 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            product_type_id = 56, 
                            qty_per_cycle = 56, ), 
                        factory_details = esi_client.models.get_characters_character_id_planets_planet_id_factory_details.get_characters_character_id_planets_planet_id_factory_details(
                            schematic_id = 56, ), 
                        install_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_cycle_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        pin_id = 56, 
                        schematic_id = 56, 
                        type_id = 56, )
                    ],
                routes = [
                    esi_client.models.get_characters_character_id_planets_planet_id_route.get_characters_character_id_planets_planet_id_route(
                        content_type_id = 56, 
                        destination_pin_id = 56, 
                        quantity = 1.337, 
                        route_id = 56, 
                        source_pin_id = 56, 
                        waypoints = [
                            56
                            ], )
                    ]
            )
        else:
            return GetCharactersCharacterIdPlanetsPlanetIdOk(
                links = [
                    esi_client.models.get_characters_character_id_planets_planet_id_link.get_characters_character_id_planets_planet_id_link(
                        destination_pin_id = 56, 
                        link_level = 0, 
                        source_pin_id = 56, )
                    ],
                pins = [
                    esi_client.models.get_characters_character_id_planets_planet_id_pin.get_characters_character_id_planets_planet_id_pin(
                        contents = [
                            esi_client.models.get_characters_character_id_planets_planet_id_content.get_characters_character_id_planets_planet_id_content(
                                amount = 56, 
                                type_id = 56, )
                            ], 
                        expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        extractor_details = esi_client.models.get_characters_character_id_planets_planet_id_extractor_details.get_characters_character_id_planets_planet_id_extractor_details(
                            cycle_time = 56, 
                            head_radius = 1.337, 
                            heads = [
                                esi_client.models.get_characters_character_id_planets_planet_id_head.get_characters_character_id_planets_planet_id_head(
                                    head_id = 0, 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            product_type_id = 56, 
                            qty_per_cycle = 56, ), 
                        factory_details = esi_client.models.get_characters_character_id_planets_planet_id_factory_details.get_characters_character_id_planets_planet_id_factory_details(
                            schematic_id = 56, ), 
                        install_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_cycle_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        pin_id = 56, 
                        schematic_id = 56, 
                        type_id = 56, )
                    ],
                routes = [
                    esi_client.models.get_characters_character_id_planets_planet_id_route.get_characters_character_id_planets_planet_id_route(
                        content_type_id = 56, 
                        destination_pin_id = 56, 
                        quantity = 1.337, 
                        route_id = 56, 
                        source_pin_id = 56, 
                        waypoints = [
                            56
                            ], )
                    ],
        )
        """

    def testGetCharactersCharacterIdPlanetsPlanetIdOk(self):
        """Test GetCharactersCharacterIdPlanetsPlanetIdOk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
