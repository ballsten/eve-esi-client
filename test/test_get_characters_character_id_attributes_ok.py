# coding: utf-8

"""
    EVE Swagger Interface

    An OpenAPI for EVE Online

    The version of the OpenAPI document: 1.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from esi_client.models.get_characters_character_id_attributes_ok import GetCharactersCharacterIdAttributesOk

class TestGetCharactersCharacterIdAttributesOk(unittest.TestCase):
    """GetCharactersCharacterIdAttributesOk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetCharactersCharacterIdAttributesOk:
        """Test GetCharactersCharacterIdAttributesOk
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetCharactersCharacterIdAttributesOk`
        """
        model = GetCharactersCharacterIdAttributesOk()
        if include_optional:
            return GetCharactersCharacterIdAttributesOk(
                accrued_remap_cooldown_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                bonus_remaps = 56,
                charisma = 56,
                intelligence = 56,
                last_remap_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                memory = 56,
                perception = 56,
                willpower = 56
            )
        else:
            return GetCharactersCharacterIdAttributesOk(
                charisma = 56,
                intelligence = 56,
                memory = 56,
                perception = 56,
                willpower = 56,
        )
        """

    def testGetCharactersCharacterIdAttributesOk(self):
        """Test GetCharactersCharacterIdAttributesOk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
